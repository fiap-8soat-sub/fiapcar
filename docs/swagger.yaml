openapi: 3.1.0
info:
  title: Swagger FiapCar App
  description: Documentacaoo tecnica dos servicos expostos
  version: 1.0.0
servers:
  - url: http://localhost:8080/fiapcar
    description: Generated server url
paths:
  /sale/new:
    post:
      tags:
        - Sale Controller
      summary: Create new Sale
      description: This endpoint will create a new sale or reserve a car
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SaleResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/new:
    post:
      tags:
        - Customer Controller
      summary: Create new Customer
      description: This endpoint will create a new customer
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /car:
    post:
      tags:
        - Car Controller
      summary: Create new Car
      description: This endpoint will create a new car with parameters
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /brand:
    post:
      tags:
        - Brand Controller
      summary: Create a new brand
      description: This endpoint create a new brand
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrandResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/refresh:
    post:
      tags:
        - auth-controller
      operationId: refresh
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: refreshToken
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/new-password:
    post:
      tags:
        - auth-controller
      operationId: newPassword
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: newPassword
          in: query
          required: true
          schema:
            type: string
        - name: session
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sale/reserved/{saleId}/pay:
    patch:
      tags:
        - Sale Controller
      summary: Finalize a reserved sale by id
      description: This endpoint finalize a sale by his id
      operationId: update
      parameters:
        - name: saleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SaleResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /car/{carId}:
    get:
      tags:
        - Car Controller
      summary: Get specific car by id
      description: This endpoint returns a single car by his id
      operationId: getCarById
      parameters:
        - name: carId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Car Controller
      summary: Update a specific car by id
      description: This endpoint update a single car by his id
      operationId: updateCarByid
      parameters:
        - name: carId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /brand/{brandId}:
    get:
      tags:
        - Brand Controller
      summary: Get specific brand by id
      description: This endpoint returns a single brand by his id
      operationId: get
      parameters:
        - name: brandId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrandResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Brand Controller
      summary: Update specific brand by id
      description: This endpoint update a single brand by his id
      operationId: update_1
      parameters:
        - name: brandId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrandResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sale/{saleId}:
    get:
      tags:
        - Sale Controller
      summary: Get specific sale by id
      description: This endpoint returns a single sale by his id
      operationId: get_1
      parameters:
        - name: saleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SaleResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sale/all:
    get:
      tags:
        - Sale Controller
      summary: Get list of sales
      description: This endpoint returns a list of sales
      operationId: getAll
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSaleResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/{customerId}:
    get:
      tags:
        - Customer Controller
      summary: Get specific Customer by id
      description: This endpoint returns a single customer by his id
      operationId: get_2
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/all:
    get:
      tags:
        - Customer Controller
      summary: List all Customers
      description: This endpoint return a list of Customers
      operationId: getAll_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCustomerResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /car/list:
    get:
      tags:
        - Car Controller
      summary: Get list of cars using cryteria
      description: This endpoint returns a list of cars with cryterias
      operationId: getByCryteria
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: brandId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: modelYear
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: model
          in: query
          required: false
          schema:
            type: string
        - name: minPrice
          in: query
          required: false
          schema:
            type: number
        - name: maxPrice
          in: query
          required: false
          schema:
            type: number
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCarResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /brand/all:
    get:
      tags:
        - Brand Controller
      summary: List all brands
      description: This endpoint return a list of brands
      operationId: getAll_2
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBrandResponse'
        '422':
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        tracing:
          type: string
    SaleRequest:
      type: object
      properties:
        customerId:
          type: string
          format: uuid
        carId:
          type: integer
          format: int64
        amountPaid:
          type: number
          format: double
    CarResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        brandId:
          type: integer
          format: int64
        model:
          type: string
        year:
          type: integer
          format: int32
        color:
          type: string
        condition:
          type: string
        fuelType:
          type: string
        transmission:
          type: integer
          format: int64
        mileage:
          type: integer
          format: int32
        price:
          type: number
          format: double
        status:
          type: string
        plate:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SaleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customerId:
          type: string
          format: uuid
        car:
          $ref: '#/components/schemas/CarResponse'
        status:
          type: string
        amountPaid:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
    CustomerRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        username:
          type: string
    CustomerResponse:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        id:
          type: string
          format: uuid
        password:
          type: string
        username:
          type: string
    CarRequest:
      type: object
      properties:
        brandId:
          type: integer
          format: int64
          example: 1
        model:
          type: string
          example: Tiguan Allspace R-Line 4Motion 350 TSI
        year:
          type: integer
          format: int32
          example: 2021
        color:
          type: string
          example: BLACK
        condition:
          type: string
          example: USED
        fuelType:
          type: string
          example: GAS
        transmission:
          type: integer
          format: int64
          example: 1
        mileage:
          type: integer
          format: int32
          example: 52865
        price:
          type: number
          format: double
          example: 179.9
        plate:
          type: string
          example: GAP2B56
        description:
          type: string
          example: PRETTY GOOD
    BrandRequest:
      type: object
      properties:
        name:
          type: string
          description: Brand of cars
          example: BYD
    BrandResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AuthResponse:
      type: object
      properties:
        ok:
          type: boolean
        challenge:
          type: string
        session:
          type: string
        challengeParams:
          type: object
          additionalProperties:
            type: string
        idToken:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: integer
          format: int32
    PageSaleResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SaleResponse'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageCustomerResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CustomerResponse'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageCarResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CarResponse'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageBrandResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/BrandResponse'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
